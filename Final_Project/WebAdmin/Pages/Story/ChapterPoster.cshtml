@page
@model WebAdmin.Pages.Story.ChapterPosterModel
@{
    ViewData["Title"] = "ChapterPoster";
    Layout = "~/Pages/Shared/_LayoutPoster.cshtml";
}

@section Styles{
    <!-- summernotes CSS -->
    <link href="~/assets/plugins/summernote/dist/summernote.css" rel="stylesheet" />
}

@* -----Header----- *@
<div class="row page-titles">
    <div class="col-md-5 col-8 align-self-center">
        <h3 class="text-themecolor">Quản lý truyện</h3>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
            <li class="breadcrumb-item"><a href="/story">Quản lý truyện</a></li>
            <li class="breadcrumb-item active">Danh sách chương</li>
        </ol>
    </div>
</div>
@* ----End Header---- *@
@* ----Story Categories DataTable----- *@
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <input type="hidden" id="storyId" value="@Model.StoryId" />
                    <div class="col-3">
                        <div id="review_container"></div>
                    </div>
                    <div class="col-8">
                        <h4 class="card-title" id="name">ĐẤU PHÁ THƯƠNG KHUNG</h4>
                        <div class="col-md-6">
                            <label class="card-subtitle">Tác giả:</label>
                            <span id="author"> Thiên Tằm thổ đậu</span>
                        </div>
                        <div class="col-md-6">
                            <label class="card-subtitle">Thể loại:</label>
                            <span id="category"> Huyền huyễn</span>
                        </div>
                        <div class="col-md-6">
                            <label class="card-subtitle">Trạng thái:</label>
                            <span id="status"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="card-subtitle">Lượt xem:</label>
                            <span id="totalVisit"> 50</span>
                        </div>
                        <div class="col-md-12">
                            <label class="card-subtitle">Giới thiệu:</label>
                            <div id="description"></div>
                        </div>
                    </div>

                </div>
                <div class="table-responsive m-t-40">
                    <h3 class="card-title card-info text-white">DANH SÁCH CHƯƠNG</h3>
                    <table id="StoryCategoriesDatatable" class="table table-striped table-bordered table-hover">
                        <thead class="table-success">
                            <tr>
                                <th>Chương</th>
                                <th>Tiêu đề</th>
                                <th>Ngày đăng</th>
                                <th>Lượt xem</th>
                                <th>Trạng thái</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@* ----End Story Categories Datatable---- *@

@* ----Start Detail Event ----- *@

<div class="modal fade" id="PreviewModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title w-100 font-weight-bold">Nội dung Chương <span id="chapterposition"></span>: <span id="chaptername"></span></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body mx-3">
                <div class="col-md-12" id="detail">

                </div>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" class="btn btn-black waves-effect waves-light m-r-10" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Đóng</span>
                </button>
            </div>
        </div>
    </div>
</div>

@* ----End Detail Event ------- *@

@* ----Add New Event-------- *@
<div class="modal fade" id="AddEventModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title w-100 font-weight-bold">Thêm Chương mới</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body mx-3">
                <form class="form p-t-20" method="post" id="AddEventForm">
                    <div class="form-group">
                        <label for="name">Thứ tự chương</label>
                        <div class="input-group">
                            <input type="number" min="1" name="name" class="form-control" id="position">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="name">Tiêu đề</label>
                        <div class="input-group">
                            <input type="text" name="name" class="form-control" id="newname" placeholder="Nhập tên truyện">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="description">Nội dung</label>
                        <div class="input-group">
                            <div class="form-control summernote" id="newdetail"></div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" id="btnAddNewEvent" class="btn btn-success waves-effect waves-light m-r-10">Thêm</button>
                <button type="button" class="btn btn-black waves-effect waves-light m-r-10" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Hủy</span>
                </button>
            </div>
        </div>
    </div>
</div>

@* ----End Add new Event ----- *@
@* ----Start Edit Event ----- *@

<div class="modal fade" id="EditEventModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title w-100 font-weight-bold">Chỉnh sửa truyện</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body mx-3">
                <form class="form p-t-20" method="post" id="EditEventForm">
                    <div class="form-group">
                        <label for="name">Thứ tự chương</label>
                        <div class="input-group">
                            <input type="number" min="1" name="name" class="form-control" id="editposition">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="name">Tiêu đề</label>
                        <div class="input-group">
                            <input type="text" name="name" class="form-control" id="editname" placeholder="Nhập tên truyện">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="editdetail">Nội dung</label>
                        <div class="input-group">
                            <div class="form-control summernote" id="editdetail"></div>
                        </div>
                    </div>
                    <input type="hidden" id="eventId">
                </form>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" id="btnEditEvent" class="btn btn-success waves-effect waves-light m-r-10">Cập nhật</button>
                <button type="button" class="btn btn-black waves-effect waves-light m-r-10" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Quay lại</span>
                </button>
            </div>
        </div>
    </div>
</div>

@* ----End Edit Event ------- *@

@section Scripts {
    <script src="~/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/assets/plugins/cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>
    <script src="~/assets/plugins/cdn.datatables.net/buttons/1.2.2/js/buttons.flash.min.js"></script>
    <script src="~/assets/plugins/cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script src="~/assets/plugins/summernote/dist/summernote.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.summernote').summernote({
                height: 350, // set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                focus: false // set focus to editable area after initializing summernote
            });

         getStoryDetails(@Model.StoryId);
            InitDatatable();
        });
        var InitDatatable = function () {
            $('#StoryCategoriesDatatable').dataTable({
                "ajax": {
                    "url": `${configuration.BASE_API_URL}Chapter/getChapterListbyStoryId/@Model.StoryId`,
                    "method": "GET",
                },
                "buttons": [
                    {
                        text: '<i class="left-icon fa fa-plus"></i>&nbsp;Thêm Chương',
                        className: 'dt-button-success',
                        action: function (e, dt, node, config) {
                            ShowAddNewEventForm();
                        }
                    },
                ],
                dom: 'Bftip',
                "columns": [
                    { data: 'position' },
                    { data: 'name' },
                    {
                        data: 'createTime', render: function (data) {
                            return formatDate(data);
                        }
                    },

                    { data: 'totalVisit' },
                    {
                        data: 'isApproved',
                        render: function (data, type, row) {
                            if (data == 0) {
                                return '<span class="badge badge-success" >Chờ duyệt</span>'
                            } else if (data == 1) {
                                return '<span class="badge badge-info" >Duyệt</span>'
                            }
                            else if (data == 2) {
                                return '<span class="badge badge-danger" >Từ chối</span>'
                            } else {
                                return '<span class="badge badge-warning">Không xác dịnh</span>'
                            }
                        }
                    },
                    {
                        width: '10%',
                        data: 'id', render: function (data) {
                            return '<button type="button" class="btn btn-info m-l-10" title="Update" onclick="PreviewDetails(' + data + ')"><i class="fa fa-eye"></i></button>'
                                + '<button type="button" class="btn btn-success m-l-10" title="Update" onclick="getEventDetails(' + data + ')"><i class="fa fa-pencil"></i></button>'
                                + '<button type="button" class="btn btn-danger" title="remove" onclick="DeleteEvent(' + data + ')"><i class="fa fa-trash"></i></button>';
                        }
                    }
                ],
                autoWidth: false,
            });
        };

        //Get Story Detail
        var getStoryDetails = function (id) {
            $.ajax({
                url: `${configuration.BASE_API_URL}Story/getDetail/${id}`,
                method: "GET",
                success: function (result) {
                    actionAdd = false;
                    $('#name').text(result.data.name);
                    $('#description').append(result.data.description);
                    $('#category').text(result.data.categoryName);
                    $('#author').text(result.data.authorName);
                    $('#totalVisit').text(result.data.totalVisit)
                    if (result.data.imageUrl != null) {
                        $("#review_container").children().remove().end();
                        var oldHandle = result.data.imageUrl.replace("https://cdn.filestackcontent.com/", "");
                        $("#review_container").append("<img src='https://cdn.filestackcontent.com/resize=height:300/" + oldHandle + "' alt='Preview-loading'/>");
                    }
                    var data = result.data.status;
                    if (data == 0) {
                        $('#status').append('<span class="badge badge-success">Chờ duyệt</span>');
                    } else if (data == 1) {
                        $('#status').append('<span class="badge badge-info">Đã duyệt</span>');
                    }
                    else if (data == 2) {
                        $('#status').append('<span class="badge badge-danger">Từ chối</span>');
                    } else {
                        $('#status').append('<span class="badge badge-warning">Chưa xác định</span>');
                    }
                },
                error: function (result) {
                    $.toast({
                        heading: result.data.title,
                        text: result.data.msg,
                        position: 'top-right',
                        loaderBg: '#ffff',
                        icon: 'error',
                        hideAfter: 3500
                    });
                }
            });
        };

        //Click View button in datatable row
        function PreviewDetails(id) {
            $.ajax({
                url: `${configuration.BASE_API_URL}Chapter/getDetail/${id}`,
                method: "GET",
                success: function (result) {
                    $('#chapterposition').text(result.data.position);
                    $('#chaptername').text(result.data.name);
                    $('#detail').children().remove().end();
                    $('#detail').append(result.data.detail)
                    $("#PreviewModal").modal('show');
                },
                error: function (result) {
                    $.toast({
                        heading: result.data.title,
                        text: result.data.msg,
                        position: 'top-right',
                        loaderBg: '#ffff',
                        icon: 'error',
                        hideAfter: 3500
                    });
                }
            });
        };

        function formatDate(date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [day, month, year].join('/');
        };

        function DeleteEvent(id) {
            swal({
                title: "Xác thực",
                text: "Bạn có muốn xóa thể loại truyện này không?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Xóa",
                cancelButtonText: "Thoát",
            }, function () {
                $.ajax({
                    type: 'DELETE',
                    url: `${configuration.BASE_API_URL}Chapter/delete?id=${id}`,
                    headers: {
                        "Authorization": `${configuration.ACCESSTOKEN}`,
                    },
                    success: function (result) {
                        if (result.success) {
                            $.toast({
                                heading: result.data.title,
                                text: result.data.msg,
                                position: 'top-right',
                                loaderBg: '#ffff',
                                icon: 'success',
                                hideAfter: 3500,
                                stack: 6
                            });
                            $('#StoryCategoriesDatatable').DataTable().ajax.reload();
                        } else {
                            $.toast({
                                heading: result.data.title,
                                text: result.data.msg,
                                position: 'top-right',
                                loaderBg: '#ffff',
                                icon: 'error',
                                hideAfter: 3500
                            });
                        }
                    },
                    Error: function (result) {
                        $.toast({
                            heading: result.data.title,
                            text: result.data.msg,
                            position: 'top-right',
                            loaderBg: '#ffff',
                            icon: 'error',
                            hideAfter: 3500
                        });
                    }
                });
            });
        }

        //Add New Event Module
        function ShowAddNewEventForm() {
            $("#newdetail").children().remove().end();
            $("#newdetail").summernote();
            $("#newname").val("");
            $("#position").val(1);
            $("#AddEventModal").modal().show();
        }

        var addNewEvent = function () {
            $(".summernote").summernote('destroy');
            var formData = new FormData();
            formData.append("name", $("#newname").val());
            formData.append("detail", $("#newdetail").html());
            formData.append("position", $("#position").val());
            formData.append("storyId", $("#storyId").val());
            $.ajax({
                url: `${configuration.BASE_API_URL}Chapter/create`,
                headers: {
                    "Authorization": `${configuration.ACCESSTOKEN}`,
                },
                method: "post",
                data: formData,
                processData: false,
                contentType: false,
                success: function (result) {
                    if (result.success) {
                        $.toast({
                            heading: result.data.title,
                            text: result.data.msg,
                            position: 'top-right',
                            loaderBg: '#ffff',
                            icon: 'success',
                            hideAfter: 3500,
                            stack: 6
                        });
                        $('#StoryCategoriesDatatable').DataTable().ajax.reload();
                        $('#AddEventModal').modal('hide');
                    }
                },
                error: function (result) {
                    $.toast({
                        heading: result.data.title,
                        text: result.data.msg,
                        position: 'top-right',
                        loaderBg: '#ffff',
                        icon: 'error',
                        hideAfter: 3500
                    });
                }
            });
        };

        $("#btnAddNewEvent").on("click", function () {
            addNewEvent();
        });

        //Edit Event Module
        //Click Edit button in datatable row
        var getEventDetails = function (id) {
            $.ajax({
                url: `${configuration.BASE_API_URL}Chapter/getDetail/${id}`,
                method: "GET",
                success: function (result) {
                    actionAdd = false;
                    $('#editname').val(result.data.name);
                    $("#editdetail").summernote('destroy');
                    $('#editdetail').children().remove().end();
                    $('#editdetail').append(result.data.detail);
                    $('#editposition').val(result.data.position);
                    $('#eventId').val(result.data.id);
                    $("#editdetail").summernote();
                    $("#EditEventModal").modal('show');
                },
                error: function (result) {
                    $.toast({
                        heading: result.data.title,
                        text: result.data.msg,
                        position: 'top-right',
                        loaderBg: '#ffff',
                        icon: 'error',
                        hideAfter: 3500
                    });
                }
            });
        };
        //Click Edit Submit Edit Form
        var editEventDetails = function () {
            $("#editdetail").summernote('destroy');
            var formData = new FormData();
            formData.append("name", $("#editname").val());
            formData.append("detail", $("#editdetail").html());
            formData.append("position", $("#editposition").val());
            formData.append("id", $("#eventId").val());
            $.ajax({
                url: `${configuration.BASE_API_URL}Chapter/edit`,
                headers: {
                    "Authorization": `${configuration.ACCESSTOKEN}`,
                },
                method: "PUT",
                data: formData,
                processData: false,
                contentType: false,
                success: function (result) {
                    if (result.success) {
                        $.toast({
                            heading: result.data.title,
                            text: result.data.msg,
                            position: 'top-right',
                            loaderBg: '#ffff',
                            icon: 'success',
                            hideAfter: 3500,
                            stack: 6
                        });
                    } else {
                        $.toast({
                            heading: result.data.title,
                            text: result.data.msg,
                            position: 'top-right',
                            loaderBg: '#ffff',
                            icon: 'error',
                            hideAfter: 3500
                        });
                    }
                    $('#StoryCategoriesDatatable').DataTable().ajax.reload();
                    $("#EditEventModal").modal('hide');
                },
                error: function (result) {
                    $.toast({
                        heading: result.data.title,
                        text: result.data.msg,
                        position: 'top-right',
                        loaderBg: '#ffff',
                        icon: 'error',
                        hideAfter: 3500
                    });
                }
            });
        }
        //click button to edit organization details
        $("#btnEditEvent").click(function () {
            editEventDetails();
        });
    </script>
}